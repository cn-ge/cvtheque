framework:
    csrf_protection: ~

security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # encoder
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12
    providers:
        current_db_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            form_login:
                provider: current_db_provider
                login_path: login
                check_path: login
                default_target_path: login
                csrf_token_generator: security.csrf.token_manager
            logout:
                path:  logout
                target: login
            access_denied_handler: App\Security\AccessDeniedHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_HR, ROLE_ALLOWED_TO_SWITCH]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/candidat, roles: ROLE_USER }
        - { path: ^/human-ressources, roles: ROLE_HR }
        - { path: ^/admin, roles: ROLE_ADMIN }
